type Link = Option<Box<ListNode>>;
#[derive(PartialEq, Eq, Clone, Debug)]
pub struct ListNode {
  pub val: i32,
  pub next: Link
}

fn main() {
    let arr: Vec<Vec<char>> = 
    vec![vec!['8','3','.','.','7','.','.','.','.']
    ,vec!['6','.','.','1','9','5','.','.','.']
    ,vec!['.','9','8','.','.','.','.','6','.']
    ,vec!['8','.','.','.','6','.','.','.','3']
    ,vec!['4','.','.','8','.','3','.','.','1']
    ,vec!['7','.','.','.','2','.','.','.','6']
    ,vec!['.','6','.','.','.','.','2','8','.']
    ,vec!['.','.','.','4','1','9','.','.','5']
    ,vec!['.','.','.','.','8','.','.','7','9']];
    println!("{}", arr[0][1] == '3');
    println!("{}", 3 / 3);

}
